@startuml Game Model


package "Model"{
    playM "1" *-- "2" player
    playM "1" *-- "1" matrix
    game "1" *-- "1" optionsM
    matrix "1" *-- "size" matrixRow
    matrixRow "1" *-- "size" matrixCell
    ' matrix "1" - "1" board:contains
    ' board "1" *-- "size" boardRow: contains
    ' boardRow "1" *-- "size" boardCell: contains
    ' matrixCell <. boardCell: Dependency
    game "1" *-- "1" playM
    playM "1" *-- "1" timerM
    player "1" *-- "1" playerOptions
    optionsM "1" .* "1" playM: dependency
}

class playM{
    void moveAnalyze()
    player activePlayer
    void claimVertex(i, j)
    Number turn
}

class game {
}

class player{
    Number id
}

class optionsM{
    Number boardSize
    Bool bgImage
    String bgColor
    void setBoardSize()
    void setBgImageOn()
    void setBgColor()
}

class timerM{
    Number elapsed
    Boolean active
}

class matrix{
    matrixRow[] rows
    setCell(i,j,player,turn)
}

class matrixRow{
    matrixCell[] cells
    getCell(j)
}

class matrixCell{
    player owner
    Number turnClaimed
    player getOwner()
}

class playerOptions{
    String name
    String color
    Bool hints
    void setHints()
    void setColor()
    String getColor()
}

@enduml